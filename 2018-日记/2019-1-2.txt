- 线上线下课程
checklist及测试用例设计，作为开发，checklist的相关知识，包括设计时的一些关注点：
1、  UE/UI 展示
2、 功能 功能点覆盖
3、 性能 qps、吞吐量、响应时间、系统资源占用 
4、 数据 
5、 安全 越权访问、sql注入
6、 多线程 并发
7、 兼容性
8、 系统稳定性
9、 事务测试 数据强一致性还是数据弱一致性
10、 监控 上线查看哪些应用
11、 日志 Info、debug、error级别选择问题； 关键业务流程和异常流程是否有日志记录
12、 发布流程 发布时间确定；发布顺序、是否需要免战牌、线上验证、beta环境同步包括一些脚本
- checklist编写时间:
1、产品需求文档成型
2、开发设计文档完成
3、开发完成提测后code diff
4、checklist记录工具：脑图、excel
测试用例记录工具使用：bugfree、PMO（主要记录bug）
- 完成数据库、接口review:
1、改善部分接口，一些接口可以简化，放在一个网络请求中获取，减少资源浪费，减少前端工作量。
2、由于所做的项目有许多模块关联在一起，需要用到图数据库，使用neo4j图形数据库，了解和学习neo4j。

问题与解决：
问题：测试用例的提取和测试方法？
从用户角度：需求文档，从开发设计角度：系统结构
黑盒测试设计方法：边界值测试，异常测试，极限测试，随机测试，因果图。
白盒测试设计：条件覆盖，条件组合覆盖，基本路径覆盖
问题：如何执行checklist？
使用工具自动生成case。执行case时，失败的话要提交bug（todolist，qbug，bugfree，pmo四种途径）。
提bug时注意要写完整前置条件，复现步骤，预期结果，实际结果。不能只简单地描述一下，最好还可以有图片说明
P1、P2级别的bug在发布时不能留。
问题：checklist是否要含盖所有的接口，service？那checklist会不会非常多？
注：不能忘记checklist的四个基本元素：标题、属性、输入、输出

 